--- projects/libcxx/lib/CMakeLists.txt
+++ projects/libcxx/lib/CMakeLists.txt
@@ -95,8 +95,8 @@ if ( APPLE AND (LIBCXX_CXX_ABI_LIBNAME STREQUAL "libcxxabi" OR
     add_link_flags(
       "-compatibility_version 1"
       "-current_version 1"
-      "-install_name /usr/lib/libc++.1.dylib"
-      "-Wl,-reexport_library,/usr/lib/libc++abi.dylib"
+      "-install_name ${CMAKE_INSTALL_PREFIX}/lib/libc++.1.dylib"
+      "-Wl,-reexport_library,${CMAKE_INSTALL_PREFIX}/lib/libc++abi.dylib"
       "-Wl,-unexported_symbols_list,${CMAKE_CURRENT_SOURCE_DIR}/libc++unexp.exp"
       "/usr/lib/libSystem.B.dylib")
   else()
@@ -111,16 +111,18 @@ if ( APPLE AND (LIBCXX_CXX_ABI_LIBNAME STREQUAL "libcxxabi" OR
           "-Wl,-reexport_library,${CMAKE_OSX_SYSROOT}/usr/lib/libc++abi.dylib")
       endif()
     else()
-      set(OSX_RE_EXPORT_LINE "/usr/lib/libc++abi.dylib -Wl,-reexported_symbols_list,${CMAKE_CURRENT_SOURCE_DIR}/libc++abi${LIBCXX_LIBCPPABI_VERSION}.exp")
+      get_property(abiloc TARGET cxxabi_shared PROPERTY LOCATION)
+      set(OSX_RE_EXPORT_LINE "-Wl,-reexport_library,${abiloc}")
     endif()
 
     add_link_flags(
       "-compatibility_version 1"
-      "-install_name /usr/lib/libc++.1.dylib"
+      "-install_name ${CMAKE_INSTALL_PREFIX}/lib/libc++.1.dylib"
       "-Wl,-unexported_symbols_list,${CMAKE_CURRENT_SOURCE_DIR}/libc++unexp.exp"
       "${OSX_RE_EXPORT_LINE}"
       "-Wl,-force_symbols_not_weak_list,${CMAKE_CURRENT_SOURCE_DIR}/notweak.exp"
-      "-Wl,-force_symbols_weak_list,${CMAKE_CURRENT_SOURCE_DIR}/weak.exp")
+      "-Wl,-force_symbols_weak_list,${CMAKE_CURRENT_SOURCE_DIR}/weak.exp"
+      "-nodefaultlibs")
   endif()
 endif()
 
@@ -135,6 +137,7 @@ set_target_properties(cxx
     OUTPUT_NAME   "c++"
     VERSION       "${LIBCXX_ABI_VERSION}.0"
     SOVERSION     "${LIBCXX_ABI_VERSION}"
+    INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
   )
 
 # Generate a linker script inplace of a libc++.so symlink. Rerun this command
